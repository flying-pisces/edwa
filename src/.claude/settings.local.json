{
  "permissions": {
    "allow": [
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(python:*)",
      "Bash(\"C:\\Users\\labusers\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\" main.py)",
      "Bash(\"C:\\Users\\labusers\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\" -c \"import sys; print(''Python paths:''); [print(f''  {p}'') for p in sys.path[:5]]; print(''\\nTrying to locate pixelinkWrapper:''); import pixelinkWrapper; print(f''PixeLINK location: {pixelinkWrapper.__file__}'')\")",
      "Bash(\"C:\\Users\\labusers\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\" -c \"print(''Testing PixeLINK import fix...''); \ntry: \n    from pixelinkWrapper import PxLApi; \n    print(''[SUCCESS] PixeLINK wrapper imported without WMIC errors!'');\n    print(f''API available: {hasattr(PxLApi, \"\"_Api\"\")}'');\n    print(''WMIC compatibility fix working correctly.'');\nexcept Exception as e: \n    print(f''[ERROR] Import still failing: {e}'')\")",
      "Bash(\"C:\\Users\\labusers\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\" -c \"print(''Testing enhanced camera system...''); \nimport sys, os; \nsys.path.insert(0, r''C:\\project\\edwa\\src'');\ntry: \n    from pixelink_camera_enhanced_basic import EnhancedPixelinkCamera;\n    print(''[SUCCESS] Enhanced camera imported successfully!'');\n    camera = EnhancedPixelinkCamera();\n    if camera.initialize():\n        print(''[SUCCESS] Enhanced camera initialized successfully!'');\n        print(f''Camera info: {camera.camera_info}'');\n        camera.cleanup();\n    else:\n        print(''[INFO] Camera hardware not connected, but software is ready'');\nexcept Exception as e: \n    print(f''[ERROR] Enhanced camera test failed: {e}'');\n    import traceback; traceback.print_exc();\")",
      "Bash(\"C:\\Users\\labusers\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\" -c \"\nfrom pixelinkWrapper import PxLApi;\nprint(''Available PxLApi attributes:'');\nattrs = [attr for attr in dir(PxLApi) if not attr.startswith(''_'')];\nflag_attrs = [attr for attr in attrs if ''flag'' in attr.lower()];\ntrigger_attrs = [attr for attr in attrs if ''trigger'' in attr.lower()];\nfeature_attrs = [attr for attr in attrs if ''feature'' in attr.lower()];\nprint(f''Flag-related: {flag_attrs}'');\nprint(f''Trigger-related: {trigger_attrs}'');\nprint(f''Feature-related: {feature_attrs[:10]}'');  # limit output\nprint(f''Total attributes: {len(attrs)}'');\")",
      "Bash(\"C:\\Users\\labusers\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\" -c \"print(''Testing FIXED enhanced camera system...''); \nimport sys, os; \nsys.path.insert(0, r''C:\\project\\edwa\\src'');\ntry: \n    from pixelink_camera_enhanced_basic import EnhancedPixelinkCamera;\n    print(''[SUCCESS] Enhanced camera imported successfully!'');\n    camera = EnhancedPixelinkCamera();\n    if camera.initialize():\n        print(''[SUCCESS] Enhanced camera initialized with all features!'');\n        print(f''Camera info: {camera.camera_info}'');\n        print(f''Settings: {camera.get_camera_settings()}'');\n        camera.cleanup();\n        print(''[SUCCESS] All PixeLINK API constants working correctly!'');\n    else:\n        print(''[INFO] Camera hardware not connected, but software is ready'');\nexcept Exception as e: \n    print(f''[ERROR] Enhanced camera test failed: {e}'');\n    import traceback; traceback.print_exc();\")",
      "Bash(\"C:\\Users\\labusers\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\" -c \"\nfrom pixelinkWrapper import PxLApi;\nprint(''Checking setFeature signature:'');\nprint(f''setFeature: {PxLApi.setFeature}'');\nprint(f''setFeature.__doc__: {PxLApi.setFeature.__doc__}'');\nhelp(PxLApi.setFeature);\")",
      "Bash(\"C:\\Users\\labusers\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\" -c \"print(''Testing FULLY FIXED enhanced camera system...''); \nimport sys, os; \nsys.path.insert(0, r''C:\\project\\edwa\\src'');\ntry: \n    from pixelink_camera_enhanced_basic import EnhancedPixelinkCamera;\n    print(''[SUCCESS] Enhanced camera imported successfully!'');\n    camera = EnhancedPixelinkCamera();\n    if camera.initialize():\n        print(''[SUCCESS] Enhanced camera initialized with ALL features working!'');\n        print(f''Camera info: {camera.camera_info}'');\n        \n        # Test advanced features\n        print(''[TEST] Testing exposure control...'');\n        camera.set_exposure(15.0, auto_exposure=False);\n        \n        print(''[TEST] Testing gain control...'');\n        camera.set_gain(5.0);\n        \n        print(''[TEST] Testing trigger modes...'');\n        camera.set_trigger_mode(''software'');\n        \n        print(''[TEST] Testing measurement capture...'');\n        test_pos = {''X'': 1000, ''Y'': 2000, ''Z'': 3000, ''U'': -500, ''V'': 100, ''W'': -200};\n        filepath, metadata = camera.create_measurement_triggered_capture(test_pos, 87.5, ''test_fixed'');\n        \n        if filepath:\n            print(f''[SUCCESS] Measurement capture working: {os.path.basename(filepath)}'');\n        \n        camera.cleanup();\n        print(''[SUCCESS] ALL ENHANCED FEATURES WORKING PERFECTLY!'');\n    else:\n        print(''[INFO] Camera hardware not connected, but software is ready'');\nexcept Exception as e: \n    print(f''[ERROR] Enhanced camera test failed: {e}'');\n    import traceback; traceback.print_exc();\")",
      "Bash(\"C:\\Users\\labusers\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\" -c \"print(''Testing enhanced main.py integration...''); \nimport sys, os; \nsys.path.insert(0, r''C:\\project\\edwa\\src'');\ntry: \n    print(''[TEST] Importing enhanced camera components...'');\n    from pixelink_camera_enhanced_basic import EnhancedPixelinkCamera, EnhancedCameraGUI, EnhancedCameraPreviewWindow;\n    print(''[SUCCESS] Enhanced camera components imported!'');\n    \n    print(''[TEST] Testing camera initialization...'');\n    camera = EnhancedPixelinkCamera();\n    if camera.initialize():\n        print(''[SUCCESS] Enhanced camera ready for main.py integration!'');\n        print(f''Camera Model: {camera.camera_info.get(\"\"model\"\", \"\"Unknown\"\")}'');\n        print(f''Serial: {camera.camera_info.get(\"\"serial\"\", \"\"Unknown\"\")}'');\n        camera.cleanup();\n    \n    print(''[INFO] Enhanced PixeLINK camera system is ready for EDWA main application!'');\n    \nexcept Exception as e: \n    print(f''[ERROR] Main.py integration test failed: {e}'');\n    import traceback; traceback.print_exc();\")",
      "Bash(\"C:\\Users\\labusers\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\" test_main_integration.py)",
      "Bash(\"C:\\Users\\labusers\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\" -c \"\n# Test the specific initialization issue\nimport sys\nsys.path.insert(0, r''C:\\project\\edwa\\src'')\ntry:\n    from pixelink_camera_enhanced_basic import EnhancedPixelinkCamera\n    print(''[TEST] Creating camera instance...'')\n    camera = EnhancedPixelinkCamera()\n    print(f''[TEST] Camera object created: {camera}'')\n    \n    if camera.initialize():\n        print(''[SUCCESS] Camera initialized properly'')\n        print(f''[INFO] Camera available: {camera.h_camera is not None}'')\n        camera.cleanup()\n    else:\n        print(''[ERROR] Camera initialization returned False'')\n        \nexcept Exception as e:\n    print(f''[ERROR] Camera creation/init failed: {e}'')\n    import traceback\n    traceback.print_exc()\n\")",
      "Bash(\"C:\\Users\\labusers\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\" automated_code_review_agent.py)",
      "Bash(\"C:\\Users\\labusers\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\" demo_automated_review.py)",
      "Bash(\"C:\\Users\\labusers\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\" validate_camera_system.py)",
      "Bash(\"C:\\Users\\labusers\\AppData\\Local\\Programs\\Python\\Python312\\python.exe\" production_readiness_check.py)"
    ],
    "additionalDirectories": [
      "C:\\project\\edwa"
    ]
  }
}